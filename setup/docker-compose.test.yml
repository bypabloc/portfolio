# Test Environment Override
# Portfolio Serverless System - Testing Setup Configuration


services:
  # Database - Test environment
  portfolio-db:
    environment:
      - POSTGRES_DB=portfolio_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=portfolio_password
    command: ["postgres", "-c", "log_statement=none", "-c", "log_duration=off"]
    volumes:
      # Configuración básica para testing
      - ./database/init-portfolio-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf:ro

  # Neon Proxy - Test configuration (disabled - not critical for development)
  # neon-proxy:
  #   environment:
  #     - NODE_ENV=test
  #     - LOG_LEVEL=warn

  # Personal Info Lambda - Test environment
  personal-info-lambda:
    environment:
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - LOG_LEVEL=warn

  # Experience Lambda - Test environment
  experience-lambda:
    environment:
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - LOG_LEVEL=warn

  # Projects Lambda - Test environment
  projects-lambda:
    environment:
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - LOG_LEVEL=warn

  # Skills Lambda - Test environment
  skills-lambda:
    environment:
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_test
      - LOG_LEVEL=warn

  # API Gateway - Test environment
  api-gateway:
    environment:
      - NGINX_ENV=test
      - LOG_LEVEL=warn

  # Website - Test environment
  portfolio-website:
    environment:
      - NODE_ENV=test
      - ASTRO_PORT=4321
      - API_BASE_URL=http://api-gateway
      - HOT_RELOAD=false
      - DEBUG_MODE=false
      - LOG_LEVEL=warn
      - TEST_MODE=true
    volumes:
      - ../website/tests:/app/tests:ro

  # Test utilities
  test-runner:
    image: alpine:latest
    container_name: test-runner
    profiles:
      - test
    working_dir: /workspace
    volumes:
      - .:/workspace:ro
    command: ["sleep", "infinity"]