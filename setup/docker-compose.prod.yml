# Production Environment Override
# Portfolio Serverless System - Production Setup Configuration


services:
  # Database - Production environment
  portfolio-db:
    environment:
      - POSTGRES_DB=portfolio_prod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=portfolio_password
      - PGDATA=/var/lib/postgresql/data/pgdata
    command: ["postgres", "-c", "log_statement=none", "-c", "log_duration=off", "-c", "shared_preload_libraries=pg_stat_statements"]
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: always

  # Neon Proxy - Production configuration
  neon-proxy:
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=error
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    restart: always

  # Personal Info Service - Production environment
  personal-info-service:
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_prod
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@neon-proxy:5433/portfolio_prod
      - SERVICE_NAME=personal-info
      - LOG_LEVEL=error
      - HOT_RELOAD=false
      - DEBUG_MODE=false
      - MONITORING_ENABLED=true
      - METRICS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: always

  # Experience Service - Production environment
  experience-service:
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_prod
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@neon-proxy:5433/portfolio_prod
      - SERVICE_NAME=experience
      - LOG_LEVEL=error
      - HOT_RELOAD=false
      - DEBUG_MODE=false
      - MONITORING_ENABLED=true
      - METRICS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: always

  # Projects Service - Production environment
  projects-service:
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_prod
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@neon-proxy:5433/portfolio_prod
      - SERVICE_NAME=projects
      - LOG_LEVEL=error
      - HOT_RELOAD=false
      - DEBUG_MODE=false
      - MONITORING_ENABLED=true
      - METRICS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: always

  # Skills Service - Production environment
  skills-service:
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:portfolio_password@portfolio-db:5432/portfolio_prod
      - NEON_DATABASE_URL=postgresql://postgres:portfolio_password@neon-proxy:5433/portfolio_prod
      - SERVICE_NAME=skills
      - LOG_LEVEL=error
      - HOT_RELOAD=false
      - DEBUG_MODE=false
      - MONITORING_ENABLED=true
      - METRICS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: always

  # API Gateway - Production environment
  api-gateway:
    environment:
      - NGINX_ENV=production
      - LOG_LEVEL=error
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    restart: always

  # Frontend App - Production environment
  portfolio-frontend:
    environment:
      - NODE_ENV=production
      - ASTRO_PORT=4321
      - API_BASE_URL=http://api-gateway
      - HOT_RELOAD=false
      - DEBUG_MODE=false
      - LOG_LEVEL=error
      - MONITORING_ENABLED=true
      - METRICS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: always

  # Production monitoring
  prod-monitor:
    image: alpine:latest
    container_name: prod-monitor
    profiles:
      - prod
      - monitoring
    working_dir: /workspace
    volumes:
      - .:/workspace:ro
    command: ["sleep", "infinity"]
    restart: always